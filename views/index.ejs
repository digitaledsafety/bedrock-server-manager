<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bedrock Server Manager</title>
    <link href="/style.css" rel="stylesheet">
</head>
<body>
    <div class="container">
        <h1>
            <img src="/favicon.ico" alt="Minecraft Grass Block" style="vertical-align: middle; margin-right: 10px; image-rendering: pixelated;">
            Bedrock Server Manager
        </h1>

        <% if (config && config.serverName) { %>
        <div class="section">
            <h2>Managed Server: <span><%= config.serverName %></span></h2>
            <div>
                <p><strong>Port (IPv4):</strong> <%= config.serverPortIPv4 %></p>
                <p><strong>Port (IPv6):</strong> <%= config.serverPortIPv6 %></p>
                <p><strong>Server Directory:</strong> <code><%= config.serverDirectory %></code></p>
                <p><strong>Default World:</strong> <%= config.worldName %></p>
                <p><strong>Log Level:</strong> <%= config.logLevel %></p>
                <p><strong>Auto Start:</strong> <%= config.autoStart ? 'Enabled' : 'Disabled' %></p>
                <p><strong>Current Server Version:</strong> <%= typeof currentServerVersion !== 'undefined' && currentServerVersion ? currentServerVersion : 'Unknown' %></p>
            </div>
        </div>
        <% } %>

        <div class="section">
            <div id="messageBox" class="message-box" role="alert" style="display: none;"></div>
            <h2>Server Status</h2>
            <p>Current Status: <span id="serverStatus" class="status-indicator status-<%= serverStatus %>"><%= serverStatus.toUpperCase() %></span></p>
            <div class="button-group">
                <button id="startButton">Start Server</button>
                <button id="stopButton">Stop Server</button>
                <button id="restartButton">Restart Server</button>
                <button id="updateButton">Check & Install Update</button>
            </div>
        </div>

        <div class="section">
            <h2>Auto-Update Configuration</h2>
            <form id="autoUpdateConfigForm">
                <div class="form-group">
                    <input type="checkbox" id="autoUpdateEnabled" name="autoUpdateEnabled" <%= config.autoUpdateEnabled ? 'checked' : '' %>>
                    <label for="autoUpdateEnabled">Enable Automatic Updates</label>
                </div>
                <div class="form-group">
                    <label for="autoUpdateIntervalMinutes">Update Check Interval (minutes):</label>
                    <input type="number" id="autoUpdateIntervalMinutes" name="autoUpdateIntervalMinutes" value="<%= config.autoUpdateIntervalMinutes %>" min="1">
                </div>
                <button type="submit">Save Auto-Update Settings</button>
            </form>
        </div>

        <div class="section">
            <h2>World Management</h2>
            <div class="world-list">
                <% if (worlds && worlds.length > 0) { %>
                    <% worlds.forEach(world => { %>
                        <li class="world-item <%= properties['level-name'] === world ? 'active' : '' %>" data-world-name="<%= world %>">
                            <span><%= world %></span>
                            <button class="activate-world-button" data-world-name="<%= world %>">
                                Activate
                            </button>
                        </li>
                    <% }); %>
                <% } else { %>
                    <p>No worlds found. Start the server to generate a default world.</p>
                <% } %>
            </div>
            <p>To activate a world, click 'Activate' next to its name. This will update the 'level-name' property. Remember to click "Save Properties" to apply the change.</p>
        </div>

        <div class="section">
            <h2>Pack Management</h2>
            <form id="uploadPackForm">
                <div class="form-group">
                    <label for="packFile">Pack File (.mcpack or .mcaddon):</label>
                    <input type="file" id="packFile" name="packFile" accept=".mcpack,.mcaddon">
                </div>
                <div class="form-group">
                    <label for="packType">Pack Type (if uploading a single .mcpack):</label>
                    <select id="packType" name="packType">
                        <option value="behavior">Behavior Pack</option>
                        <option value="resource">Resource Pack</option>
                        <option value="dev_behavior">Development Behavior Pack</option>
                        <option value="dev_resource">Development Resource Pack</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="packWorldName">Target World:</label>
                    <select id="packWorldName" name="worldName">
                        <% if (worlds && worlds.length > 0) { %>
                            <% worlds.forEach(world => { %>
                                <option value="<%= world %>" <%= properties['level-name'] === world ? 'selected' : '' %>><%= world %></option>
                            <% }); %>
                        <% } else { %>
                            <option value="" disabled>No worlds available. Start server or check configuration.</option>
                        <% } %>
                    </select>
                </div>
                <button type="submit" id="uploadPackButton">Upload Pack</button>
            </form>
        </div>

        <div class="section">
            <h2>Server Properties</h2>
            <form id="propertiesForm">
                <div class="form-grid">
                    <%
                    const dropdownProperties = {
                        'gamemode': ['survival', 'creative', 'adventure'],
                        'difficulty': ['peaceful', 'easy', 'normal', 'hard'],
                        'force-gamemode': ['true', 'false'],
                        'allow-cheats': ['true', 'false'],
                        'online-mode': ['true', 'false'],
                        'white-list': ['true', 'false'],
                        'allow-list': ['true', 'false'],
                        'enable-lan-visibility': ['true', 'false'],
                        'default-player-permission-level': ['visitor', 'member', 'operator'],
                        'texturepack-required': ['true', 'false'],
                        'content-log-file-enabled': ['true', 'false'],
                        'compression-algorithm': ['zlib', 'snappy'],
                        'server-authoritative-dismount-strict': ['true', 'false'],
                        'server-authoritative-movement-strict': ['true', 'false'],
                        'server-authoritative-entity-interactions-strict': ['true', 'false'],
                        'chat-restriction': ['None', 'Dropped', 'Disabled'],
                        'disable-player-interaction': ['true', 'false'],
                        'disable-persona': ['true', 'false'],
                        'disable-custom-skins': ['true', 'false'],
                        'allow-outbound-script-debugging': ['true', 'false'],
                        'allow-inbound-script-debugging': ['true', 'false'],
                        'client-side-chunk-generation-enabled': ['true', 'false'],
                        'block-network-ids-are-hashes': ['true', 'false'],
                        'script-debugger-auto-attach': ['true', 'false'],
                        'pvp': ['true', 'false'],
                        'hardcore': ['true', 'false']
                    };
                    for (const key in properties) {
                        const isDropdown = dropdownProperties.hasOwnProperty(key);
                    %>
                        <div class="form-group">
                            <label for="<%= key %>"><%= key.replace(/-/g, ' ') %>:</label>
                            <% if (isDropdown) { %>
                                <select class="form-control" id="<%= key %>" name="<%= key %>">
                                    <% dropdownProperties[key].forEach(function(value) { %>
                                        <option value="<%= value %>" <%= properties[key] == value ? 'selected' : '' %>><%= value %></option>
                                    <% }); %>
                                </select>
                            <% } else { %>
                                <input type="text" id="<%= key %>" name="<%= key %>" value="<%= properties[key] %>">
                            <% } %>
                        </div>
                    <% } %>
                </div>
                <button type="submit">Save Properties</button>
            </form>
        </div>
        <p style="text-align: center;"><img src="/icon.ico" alt="by the Digital Education & Safety Foundation Logo" style="width:25px; vertical-align: middle; margin-right: 10px; image-rendering: pixelated;">by the Digital Education & Safety Foundation</p>
    </div>

    <script src="/script.js"></script>
</body>
</html>
